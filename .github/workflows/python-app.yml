name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    branches:
      - workflows

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install flake8 pytest psycopg2 requests; fi
        continue-on-error: true

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --output-format=github .
        continue-on-error: true

      - name: Test with pytest
        run: |
          pytest
        continue-on-error: true

      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      - name: Build Application
        run: |
          pyinstaller --onefile main.py 

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: executable
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: executable

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0
          release_name: Release v1.0

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./final_project.exe
          asset_name: final_project.exe
          asset_content_type: application/octet-stream
